# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: batch-pageview # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  region: ${file(./serverlessConfig.js):region}
  stage: ${opt:stage, 'dev'}
  vpc:
    securityGroupIds: 
      "Fn::Split":
        - ","
        - ${file(./serverlessConfig.js):vpc.securityGroupIds}
    subnetIds: 
      "Fn::Split":
        - ","
        - ${file(./serverlessConfig.js):vpc.subnetIds}
  environment:
    stage: ${self:provider.stage}
    region: ${self:provider.region}
    servicename: ${self:service.name}
  tags:
    stage: ${self:provider.stage}
    region: ${self:provider.region}
    servicename: ${self:service.name}
    GIT_DEPLOY_REVISION: ${file(./serverlessConfig.js):git_revision}
    GIT_DEPLOY_BRANCH: ${file(./serverlessConfig.js):git_branch}
    DEPLOY_DATE: ${file(./serverlessConfig.js):toDateString}
  logRetentionInDays: 3
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - s3:*
       - logs:*
       - sqs:*
       - kinesis:*
       - events:*
       - kms:*
      Resource: "*"   
  exclude:
    - .gitignore
    - .env

functions:
  makeRewardPool:
    handler: functions/mgr/makeRewardPool
  calculateRoyalty:
    handler: functions/cron/calculateRoyalty.handler
    timeout: 300

  pageviewWriteOnchain:
    handler: functions/onchain/pageviewWriteOnchain.handler
    timeout: 300
    #events:
    #  - schedule: rate(5 minutes)

  dailyPageview:
    handler: functions/cron/dailyPageview.handler
    timeout: 300
    #events:
    #  - schedule: cron(10 0 * * ? *) # daily 00:10:00

  recentlyPageview:
    handler: functions/cron/recentlyPageview.handler
    timeout: 30
    events:
      - schedule: rate(5 minutes)
      
  generatePopular:
    handler: functions/cron/generatePopular.handler
    timeout: 300
    events:
      - schedule: rate(5 minutes)
  
  generateFeatured:
    handler: functions/cron/generateFeatured.handler
    timeout: 300
    events:
      - schedule: rate(5 minutes)

  generateTopTag:
    handler: functions/cron/generateTopTag.handler
    timeout: 300
    events:
      - schedule: rate(5 minutes)
      
stepFunctions:
  validate: true
  stateMachines:
    dailyAggregateRoyalty:
      events:
        - schedule: 
            rate: cron(30 0 * * ? *)
      definition:
        StartAt: aggregatePageviewState
        States:
          aggregatePageviewState:
            Type: Task
            Resource:
              Fn::GetAtt:
                - dailyPageview
                - Arn
            End: true


plugins:
  - serverless-mocha-plugin
  - serverless-step-functions